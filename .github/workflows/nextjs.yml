name: Deploy Portfolio to GitHub Pages

on:
  push:
    branches: ["master"]  # Change "master" to your default branch if different
  workflow_dispatch:  # Allows manual trigger from the GitHub Actions UI

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"  # You can change this to match your Node version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Inject secret environment variables
      - name: Set up environment variables
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        run: echo "Environment variables injected"

      # Step 5: Build the Next.js app
      - name: Build Next.js app
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}  # Pass secret to build
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}  # Pass secret to build
        run: npm run build

      # Step 6: Export the Next.js app as static HTML
      - name: Export static files
        run: ${{ steps.detect-package-manager.outputs.runner }} next export

      # Step 7: Upload artifact for deployment
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './out'  # Path to the exported static files (by default `out` folder)

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures the build job completes before deploying
    steps:
      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
